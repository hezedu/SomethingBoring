import{L as t,R as e,q as a,X as n,Y as r,Z as o,$ as c}from"./index-CioBjTVG.js";function s(t){const e=Object.create(null),a=Object.create(null);return t.forEach((t=>{const s=t.baseCurrency.toUpperCase();t.contractInfos.forEach((t=>{const e=Object.assign({},t),s=e.contractCode;e.key=s,e.keyCapital=s.toUpperCase(),e.name=s.toUpperCase(),e.ticker=n,e.pair=r(e.tradePairs),e.pair=function(t,e){const{maxCountDecimalDigit:a,maxCount:n,minCount:r}=t;return t.maxPiece=n,t.minPiece=r,t.maxCountDecimalDigit=c(e),t.maxPieceDecimalDigit=a,t.maxCount=n*e,t.minCount=r*e,t}(e.pair,e.multiplier),e.fairPriceLast=o,e.settlementKey=e.settlementCurrency.toUpperCase(),e.quoteKey=e.quoteCurrency.toUpperCase(),e.baseKey=e.baseCurrency.toUpperCase(),delete e.tradePairs,a[s]=e})),e[s]={}})),{baseMap:e,map:a}}class i{static async getContractOnline(){const{data:a}=await t.request({method:"post",url:"/exchange/contract/online",data:{}}),n=s(a),r=e();r.setContractOnline(n),r.setDisc(a)}static async getPositions(){const n=a(),{data:r}=await(o=n.mid,t.request({method:"post",url:`/exchange/contract/position/${o}`,data:{}}));var o;e().setContractPosition(r.data)}static async changeLeverage({contractCode:e,positionType:n,leverage:r}){const o=a();return await function({contractCode:e,mid:a},n){return t.request({method:"post",url:`/exchange/contract/leverage/${e}/${a}`,data:n})}({mid:o.mid,contractCode:e},{positionType:n,amount:r})}static async changeMargin({contractCode:e,positionType:n,amount:r}){const o=a();return await function({contractCode:e,mid:a},n){return t.request({method:"post",url:`/exchange/contract/margin/${e}/${a}`,data:n})}({mid:o.mid,contractCode:e},{positionType:n,amount:r})}static async changePositionMode({contractCode:e,positionMode:n}){const r=a();return await function({contractCode:e,mid:a},n){return t.request({method:"post",url:`/exchange/contract/position/mode/${e}/${a}`,data:n})}({mid:r.mid,contractCode:e},{amount:n})}static async changeRiskLimit({contractCode:e,positionType:n,amount:r}){const o=a();return await function({contractCode:e,mid:a},n){return t.request({method:"post",url:`/exchange/contract/risk/limit/${e}/${a}`,data:n})}({mid:o.mid,contractCode:e},{positionType:n,amount:r})}static async getSelfContracts(){const{data:e}=await t.request({method:"get",url:"/exchange/contract/self"});a().selfContracts=e}static async addSelfContracts(e){return await function(e){return t.request({method:"post",url:`/exchange/contract/self/${e}`,data:{}})}(e),await this.getSelfContracts(),Promise.resolve()}static async delSelfContracts({symbols:e}){var a;return await(a={symbols:e},t.request({method:"post",url:"/exchange/contract/self",data:a})),await this.getSelfContracts(),Promise.resolve()}static async createContractOrder(e){return function(e){return t.request({method:"post",url:"/exchange/contract/order",data:e})}(e)}static async queryContractEntrusts({pageNum:e,pageSize:a},n){return function({pageNum:e,pageSize:a},n){return t.request({method:"post",url:`/exchange/contract/entrust/p/${e}-${a}`,data:n})}({pageNum:e,pageSize:a},n)}static async queryContractEntrust(e){return function({orderNo:e}){return t.request({method:"post",url:`/exchange/contract/entrust/${e}`,data:{}})}({orderNo:e})}static async queryContractHistorys({pageNum:e,pageSize:n},r){return function({mid:e,pageNum:a,pageSize:n},r){return t.request({method:"post",url:`/exchange/contract/entrust/history/${e}/p/${a}-${n}`,data:r})}({mid:a().mid,pageNum:e,pageSize:n},r)}static async queryContractFincialSerials({pageNum:e,pageSize:n},r){return function({mid:e,pageNum:a,pageSize:n},r){return t.request({method:"post",url:`/exchange/contract/financial/serial/${e}/p/${a}-${n}`,data:r})}({mid:a().mid,pageNum:e,pageSize:n},r)}static async queryContractTrades({pageNum:e,pageSize:a},n){return function({pageNum:e,pageSize:a},n){return t.request({method:"post",url:`/exchange/contract/entrust/detail/p/${e}-${a}`,data:n})}({pageNum:e,pageSize:a},n)}static async cancelContractEntrust(e){return function({orderNo:e}){return t.request({method:"delete",url:`/exchange/contract/entrust/${e}`})}(e)}static async cancelAllContractEntrust(e){return function(e){return t.request({method:"post",url:"/exchange/contract/cancel/all",data:e})}(e)}static async closeAllPosition(e){return t.request({method:"get",url:"/exchange/contract/position/close/all"})}static async getPositionSummary(){return t.request({method:"post",url:"/exchange/contract/position/summary",data:{}})}}export{i as C};
